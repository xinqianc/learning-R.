library(tidyverse)
ggplot2::mpg
mpg
#ggplot2 extension packages延展包！！: http://www.ggplot2-exts.org/gallery/
#aesthetic的意思是plot里面所有可以visual的事物，例如color,shape,point,linetype.....就是everything可以在plot里面看到的
# dataset:mpg was used, and + the second layer geom_point which will create a scatterplot
# mapping+ aes, these two are used to specify which  variables we will use.
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy))

# a graphing template
ggplot(data = <DATA>)+
  <GEOM_FUNCTION>(mapping= aes(<MAPPINGS>))

# the relationship between displ and hwy is not fully negative, some points at the right side fall outside of the linear trend.
# add a third variable: class  to this two-dimensional scatterplot (# size, shape, color)
# third layer # shape, size, color
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy, color=class))
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy, size=class))
# alpha: control the transparency of points
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy, alpha=class))
# shape: ggplot2 only uses six shapes at a time
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy, shape=class))
# change shape,color,size manual
# now we can have 7 shapes instead of 6
# color change: http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/, shape: book p12
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy,shape=class,color=class,size=class))+
  scale_color_manual(values=c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00"))+
  scale_shape_manual(values=c(1,2,3,4,5,6,7))+
  scale_size_manual(values = c(5,1,1,1,1,1,1))
  
# color outside aes(), only change the color of the plot
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy),color="grey")
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy),shape=23, fill="purple", color="black", size=3)

#facets,subplots that each display one subset of the data
#facet_wrap: split the plot into facets.variable sould be discrete离散的
#facet_wrap(~variable,nrow=), nrow could change the length of the row
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy))+
  facet_wrap(~class,nrow=2)

#facet_grid: 
#facet_grid(variable1 ~ variable2), variable1=y,variable=2
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy))+
  facet_grid(cyl~drv)

# facet_wrap与facet_grid的不同是：facet_wrap一个变量，facet_wrap两个变量
#facet_grid也可以只用一个变量，用.代替其中一个变量，此时facet_grid(.~v1)=facet_wrap(~v1)
#.~v1:v1放在x轴
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy))+
  facet_grid(. ~cyl)

#v1~.:v1放在y轴
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy))+
  facet_grid(cyl ~.)

#parameter of facets
#facfacet_wrap(facets, nrow = NULL, ncol = NULL, scales = "fixed", shrink = TRUE, as.table = TRUE, drop = TRUE)
#facet_grid(facets, margins = FALSE, scales = "fixed", space = "fixed", shrink = TRUE, labeller = "label_value", as.table = TRUE, drop = TRUE)et参数
# nrow=1,2,3...,ncol=1,2,3..设置的是行和列的宽度
#scales="fixed", scales="free"，设置的是刻度是否根据不同的plots的数据分布情况而改变，默认是"fixed"
#shrink=TRUE是按照统计后的数据设置坐标刻度，shrink=FALSE是按照统计前的数据设置坐标刻度
#drop    表示是否去掉没有数据的分组，默认情况下不显示，逻辑值为FALSE
#as.table   和小图排列顺序有关的选项。如果为TRUE（默认）则按表格方式排列，即最大值（指分组level值）排在表格最后即右下角，否则排在左上角。
#margins 通过TRUE或者FALSE表示否设置而一个总和的分面变量，默认情况为FALSE，即不设置
#space    表示分面空间是否可以按照数据进行缩放，参数和scales一样
ggplot(data=mpg)+
  geom_point(mapping = aes(x=displ,y=hwy))+
  facet_grid(. ~cyl,scales = "free",margins=TRUE)


#geometric objects:几何对象
#geom_point：点状图，geom表示geometric objects，它用来呈现数据，点状图，线状图之类的...
#geom_smooth(),geom_boxplot()..
#one plot could contain two geoms, or more.
#以下两个表达的意思是一样的。下面更加的简洁，point和smooth用的是同一种x,y参数
#aesthetics: linetype,group
ggplot(data=mpg)+
  geom_smooth(mapping = aes(x=displ,y=hwy,linetype=drv))+
  geom_point(mapping = aes(x=displ,y=hwy,color=drv))

ggplot(data = mpg,mapping = aes(x=displ,y=hwy))+
  geom_smooth(mapping=aes(linetype=drv))+
  geom_point(mapping=aes(color=drv))

#两个geom代表的含义不一样
#se=FALSE表示的是不要显示置信区间(灰色地带)，se=TRUE则为显示置信区间
ggplot(data = mpg,mapping = aes(x=displ,y=hwy))+
  geom_point(mapping=aes(color=class))+
  geom_smooth(data=filter(mpg,class=="subcompact"),se=FALSE)


# legend:指的是图例，也就是有没有右边的描述，例如这里drv每种color代表的意思
ggplot(data=mpg)+
  geom_smooth(mapping = aes(x=displ,y=hwy,color=drv),show.legend = TRUE,se=FALSE)

#p21第六题1，2，3，4，5，6 
#
ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+
  geom_point()+
  geom_smooth(se=FALSE)

ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+
         geom_point()+
         geom_smooth(mapping = aes(group=drv),se=FALSE)

ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+
  geom_point(mapping = aes(color=drv))+
  geom_smooth(mapping = aes(group=drv,color=drv),se=FALSE)

ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+
  geom_point(mapping = aes(color=drv))+
  geom_smooth(se=FALSE)

ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+
  geom_point(mapping = aes(color=drv))+
  geom_smooth(mapping = aes(linetype=drv),se=FALSE)

ggplot(data=mpg,mapping = aes(x=displ,y=hwy))+
  geom_point(mapping = aes(color=drv))

# statistical transformations:统计转换

# 未设定y的情况下，y=count从哪里来的
#许多图形（例如散点图）都绘制了数据集的原始值。 其他图形（例如条形图）会计算要绘制的新值
#bar charts, histograms, and frequency polygons bin your data and then plot bin counts, the number of points that fall in each bin.
#smoothers fit a model to your data and then plot predictions from the model.
#boxplots compute a robust summary of the distribution and then display a specially formatted box.
ggplot2::diamonds
ggplot(data=diamonds,mapping = aes(x=cut))+
  geom_bar()
#调整颜色
ggplot(data=diamonds,mapping = aes(x=cut,color=cut))+
  geom_bar()

ggplot(data=diamonds,mapping = aes(x=cut,fill=cut))+
  geom_bar()
ggplot(data=diamonds,mapping = aes(x=cut,fill=clarity))+
  geom_bar()

#调整position adjustments
#default: "stacking", and other three options:"identity","dodge","fill"
#identity will place each object exactly where it falls in the context of the graph.
#position="identity"可能会导致图表出现overlap的情况。(这里没有而已)，因此用alpha来调整颜色看清overlap的情况
ggplot(data=diamonds,mapping = aes(x=cut,fill=clarity))+
  geom_bar(position="identity")
ggplot(data=diamonds,mapping = aes(x=cut,fill=clarity))+
  geom_bar(fill=NA,position="identity")
ggplot(data=diamonds,mapping = aes(x=cut,fill=clarity))+
  geom_bar(alpha=1/6,position="identity")
#identity最好用于2D geoms,如geom_point
ggplot(data = mpg,mapping = aes(x=displ,y=hwy,color=class))+
  geom_point(position="identity")

#fill填充，works like stacking, but makes each set of stacked bars the same height
ggplot(data=diamonds,mapping = aes(x=cut,fill=clarity))+
  geom_bar(position="fill")
#dodge躲闪:places overlapping objects directly beside one another. Easier to compare infividual values
ggplot(data=diamonds,mapping = aes(x=cut,fill=clarity))+
  geom_bar(position="dodge")

#？用来检查默认数值,从这里我们可以知道geom_bar的默认default输出是stat_count()
?geom_bar
?geom_point

#stat_count()和geom_bar()相互转换,输出结果相同
ggplot(data=diamonds,mapping=aes(x=cut))+
  stat_count()

ggplot(data=diamonds,mapping = aes(x=cut))+
  geom_bar()

#change the default to another value (override the default value)
#赋予demo值以函数 demo <- X，后以bar chart的形式呈现
#stat="identity"可以赋予y数值
demo <- tribble(
  ~a,~b,
  "bar_1",20,
  "bar_2",30,
  "bar_3",40)
ggplot(data=demo)+
  geom_bar(mapping = aes(x=a,y=b),stat="identity")


#可以改变geom_bar的default from stat_count to prop (prop也是默认选项中的一种)(computed variables: count,prop)
# group=1,2,3,.... 可以帮助在整体中进行比例分配。
#geom_bar默认情况下group是按照每个x（这里为fair组，good组..）进行prop分配的。
#如果不设置group=1,2,3,...的话，则默认的返回输出是fair组中fair的prop是100%，因此这里我们需要给group设置任意数值。
ggplot(data=diamonds)+
  geom_bar(mapping=aes(x=cut,y=..prop..))

ggplot(data=diamonds)+
  geom_bar(mapping=aes(x=cut,y=..prop..,group=1))

#赋予每一个x一个y值，可以用stat_summary
#ggplot+stat_summary 只有一个点,fun.y=mean/median/min/max,必须加上geom=point

ggplot(data=diamonds,mapping = aes(x=cut,y=depth))+
  stat_summary(geom="point",fun.y = mean)
ggplot(data=diamonds,mapping = aes(x=cut,y=depth))+
  stat_summary(geom="point",fun.y = min)
ggplot(data=diamonds,mapping = aes(x=cut,y=depth))+
  stat_summary(geom="point",fun.y = median)

# fun.ymin=min and fun.ymax=max会把范围标定出来，显示最小值到最大值的范围，以线段的形式
ggplot(data=diamonds)+
  stat_summary(mapping=aes(x=cut,y=depth),
               fun.ymin = min,
               fun.ymax = max,
               fun.y = median)

# +geom_point可以把每个点都标定出来。geom=pointrange会把范围以线段形式标定，geom=point则无
#geom_point + stat_summary 默认geom=pointrange，因此可以不用这一行。
ggplot(data=diamonds,mapping = aes(x=cut,y=depth))+
  geom_point()+
  stat_summary(geom="pointrange", fun.ymin=min,fun.ymax=max,fun.y = mean,color="blue",size=1)

ggplot(data=diamonds,mapping = aes(x=cut,y=depth))+
  geom_point()+
  stat_summary(geom="point",fun.ymin=min,fun.ymax=max,fun.y = median,color="blue",size=1)

#
?stat_bin

#随便测试
#stat_bin() must not be used with a y aesthetic.
#`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
#StatBin requires a continuous x variable: the x variable is discrete.
ggplot(data=diamonds,mapping = aes(x=depth))+
stat_bin()
